name: build
on:
  push:
    branches:
      - main
jobs:
  build:
    if: github.repository_owner == 'IntellectualSites'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Clean Build
        run: ./gradlew clean build
      - name: Determine release status
        if: ${{ runner.os == 'Linux' }}
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: Compress Bukkit
        working-directory: ${{ github.workspace }}/Bukkit/build/docs/javadoc
        run: |
          zip -r Bukkit-${{ github.run_id }}.zip ./*
      - name: Compress core
        working-directory: ${{ github.workspace }}/Core/build/docs/javadoc
        run: |
          zip -r core-${{ github.run_id }}.zip ./*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Build-${{ github.run_id }}
          release_name: Build-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Bukkit
        id: upload_release_asset_Bukkit
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/Bukkit/build/docs/javadoc/Bukkit-${{ github.run_id }}.zip
          asset_name: Bukkit-${{ github.run_id }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset core
        id: upload_release_asset_core
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/Core/build/docs/javadoc/core-${{ github.run_id }}.zip
          asset_name: core-${{ github.run_id }}.zip
          asset_content_type: application/zip
